<?php

use think\Db;
use Silie\Tree\Tree;
use Silie\Validate\Admin\AdminMenuValidate;
use Silie\Model\Admin\AdminMenu;
class MenuController extends AdminBase {
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function indexAction(){
        $this->displays();
    }

    public function list_orderAction(){
        $this->listOrders('admin_menu');
        api_success('排序更新成功！');
    }

    public function addAction(){
        if(IS_POST){
            $data = input('post.');
            $vali = new AdminMenuValidate();
            if(!$vali->scene('add')->check($data)){
                api_error($vali->getError());
            }
            $data['icon'] = '&#'.$data['icon'];
            Db::name('admin_menu')->strict(false)->field(true)->insert($data);
            $app          = $data['app'];
            $controller   = $data['controller'];
            $action       = $data['action'];
            $param        = $data['param'];
            $auth_rule_name = "$app/$controller/$action";
            $menu_name     = $data['name'];

            $findAuthRuleCount = Db::name('auth_rule')->where([
                'app'  => $app,
                'name' => $auth_rule_name,
                'type' => 'admin_url'
            ])->count();
            if (empty($findAuthRuleCount)) {
                Db::name('auth_rule')->insert([
                    "name"  => $auth_rule_name,
                    "app"   => $app,
                    "type"  => "admin_url", //type 1-admin rule;2-user rule
                    "title" => $menu_name,
                    'param' => $param,
                ]);
            }
            $this->_redis->del($this->_redis->keys('admin_menus_*'));
            api_success('操作成功');
        }
        $tree = new Tree();
        $parent_id = input('parent_id');
        $result   = Db::name('admin_menu')->order(["list_order" => "ASC"])->select();
        $array    = [];
        foreach ($result as $v) {
            $v['selected'] = $v['id'] == $parent_id ? 'selected' : '';
            $array[]       = $v;
        }
        $str = "<option value='\$id' \$selected>\$spacer \$name</option>";
        $tree->init($array);
        $select_category = $tree->getTree(0, $str);
        $this->getView()->assign('select_category',$select_category);
        $this->displays();
    }


    public function editAction(){
        if(IS_POST){
            $data = input('post.');
            $oldMenu = Db::name('admin_menu')->where('id', $data['id'])->find();
            $vali = new AdminMenuValidate();
            if(!$vali->scene('edit')->check($data)){
                api_error($vali->getError());
            }
            $data['icon'] = '&#'.$data['icon'];
            Db::name('admin_menu')->strict(false)->field(true)->update($data);
            $app          = $data['app'];
            $controller   = $data['controller'];
            $action       = $data['action'];
            $param        = $data['param'];
            $auth_rule_name = "$app/$controller/$action";
            $menu_name     = $data['name'];
            $findAuthRuleCount = Db::name('auth_rule')->where([
                'app'  => $app,
                'name' => $auth_rule_name,
                'type' => 'admin_url'
            ])->count();

            if (empty($findAuthRuleCount)) {
                $oldApp        = $oldMenu['app'];
                $oldController = $oldMenu['controller'];
                $oldAction     = $oldMenu['action'];
                $oldName       = "$oldApp/$oldController/$oldAction";
                $findOldRuleId = Db::name('auth_rule')->where("name", $oldName)->value('id');
                if (empty($findOldRuleId)) {
                    Db::name('AuthRule')->insert([
                        "name"  => $auth_rule_name,
                        "app"   => $app,
                        "type"  => "admin_url",
                        "title" => $menu_name,
                        "param" => $param
                    ]);//type 1-admin rule;2-user rule
                } else {
                    Db::name('auth_rule')->where('id', $findOldRuleId)->update([
                        "name"  => $auth_rule_name,
                        "app"   => $app,
                        "type"  => "admin_url",
                        "title" => $menu_name,
                        "param" => $param]);//type 1-admin rule;2-user rule
                }
            } else {
                Db::name('auth_rule')->where([
                    'app'  => $app,
                    'name' => $auth_rule_name,
                    'type' => 'admin_url'
                ])->update(["title" => $menu_name, 'param' => $param]);//type 1-admin rule;2-user rule
            }
            $this->_redis->del($this->_redis->keys('admin_menus_*'));
            api_success('操作成功');
        }
        $tree = new Tree();
        $id = input('id');
        $info     = Db::name('admin_menu')->where("id", $id)->find();
        $info['icon'] = mb_substr($info['icon'],2);
        $result   = Db::name('admin_menu')->order(["list_order" => "ASC"])->select();
        $array    = [];
        foreach ($result as $v) {
            $v['selected'] = $v['id'] == $info['parent_id'] ? 'selected' : '';
            $array[]       = $v;
        }
        $str = "<option value='\$id' \$selected>\$spacer \$name</option>";
        $tree->init($array);
        $select_category = $tree->getTree(0, $str);
        $this->getView()->assign('info',$info);
        $this->getView()->assign('select_category',$select_category);
        $this->displays();
    }

    public function deleteAction(){
        $id    = input('id');
        $count = Db::name('admin_menu')->where("parent_id", $id)->count();
        if ($count > 0) {
            api_error('该菜单下还有子菜单，无法删除！');
        }
        if (Db::name('admin_menu')->delete($id) !== false) {
            api_success('删除菜单成功！');
        } else {
            api_error('删除失败！');
        }
    }


    public function jsonAction(){
        $data = json_encode(Db::name('admin_menu')->field("id,parent_id as pid,name,icon,type,status,list_order,CONCAT(app,'/',controller,'/',action) as action_name")->select(),320);
        echo $data;
    }

}